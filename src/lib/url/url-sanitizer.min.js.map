{
  "version": 3,
  "sources": ["../node_modules/dompurify/src/utils.js", "../node_modules/dompurify/src/tags.js", "../node_modules/dompurify/src/attrs.js", "../node_modules/dompurify/src/regexp.js", "../node_modules/dompurify/src/purify.js", "../bundle/mjs/common.js", "../bundle/mjs/dompurify.js", "../bundle/lib/file/text-chars.json", "../bundle/lib/iana/uri-schemes.json", "../bundle/mjs/uri-util.js"],
  "sourcesContent": ["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n *\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n *\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n", "/**\n * dompurify.js\n */\n\nexport { default } from 'dompurify';\n", "[\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  27,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,\n  128,\n  129,\n  130,\n  131,\n  132,\n  133,\n  134,\n  135,\n  136,\n  137,\n  138,\n  139,\n  140,\n  141,\n  142,\n  143,\n  144,\n  145,\n  146,\n  147,\n  148,\n  149,\n  150,\n  151,\n  152,\n  153,\n  154,\n  155,\n  156,\n  157,\n  158,\n  159,\n  160,\n  161,\n  162,\n  163,\n  164,\n  165,\n  166,\n  167,\n  168,\n  169,\n  170,\n  171,\n  172,\n  173,\n  174,\n  175,\n  176,\n  177,\n  178,\n  179,\n  180,\n  181,\n  182,\n  183,\n  184,\n  185,\n  186,\n  187,\n  188,\n  189,\n  190,\n  191,\n  192,\n  193,\n  194,\n  195,\n  196,\n  197,\n  198,\n  199,\n  200,\n  201,\n  202,\n  203,\n  204,\n  205,\n  206,\n  207,\n  208,\n  209,\n  210,\n  211,\n  212,\n  213,\n  214,\n  215,\n  216,\n  217,\n  218,\n  219,\n  220,\n  221,\n  222,\n  223,\n  224,\n  225,\n  226,\n  227,\n  228,\n  229,\n  230,\n  231,\n  232,\n  233,\n  234,\n  235,\n  236,\n  237,\n  238,\n  239,\n  240,\n  241,\n  242,\n  243,\n  244,\n  245,\n  246,\n  247,\n  248,\n  249,\n  250,\n  251,\n  252,\n  253,\n  254,\n  255\n]\n", "[\n  \"aaa\",\n  \"aaas\",\n  \"about\",\n  \"acap\",\n  \"acct\",\n  \"acd\",\n  \"acr\",\n  \"adiumxtra\",\n  \"adt\",\n  \"afp\",\n  \"afs\",\n  \"aim\",\n  \"amss\",\n  \"android\",\n  \"appdata\",\n  \"apt\",\n  \"ar\",\n  \"ark\",\n  \"attachment\",\n  \"aw\",\n  \"barion\",\n  \"beshare\",\n  \"bitcoin\",\n  \"bitcoincash\",\n  \"blob\",\n  \"bolo\",\n  \"browserext\",\n  \"cabal\",\n  \"calculator\",\n  \"callto\",\n  \"cap\",\n  \"cast\",\n  \"casts\",\n  \"chrome\",\n  \"chrome-extension\",\n  \"cid\",\n  \"coap\",\n  \"coaps\",\n  \"com-eventbrite-attendee\",\n  \"content\",\n  \"content-type\",\n  \"crid\",\n  \"cstr\",\n  \"cvs\",\n  \"dab\",\n  \"dat\",\n  \"data\",\n  \"dav\",\n  \"diaspora\",\n  \"dict\",\n  \"did\",\n  \"dis\",\n  \"dlna-playcontainer\",\n  \"dlna-playsingle\",\n  \"dns\",\n  \"dntp\",\n  \"doi\",\n  \"dpp\",\n  \"drm\",\n  \"dtmi\",\n  \"dtn\",\n  \"dvb\",\n  \"dvx\",\n  \"dweb\",\n  \"ed2k\",\n  \"eid\",\n  \"elsi\",\n  \"embedded\",\n  \"ens\",\n  \"ethereum\",\n  \"example\",\n  \"facetime\",\n  \"feed\",\n  \"feedready\",\n  \"fido\",\n  \"file\",\n  \"finger\",\n  \"first-run-pen-experience\",\n  \"fish\",\n  \"fm\",\n  \"ftp\",\n  \"fuchsia-pkg\",\n  \"geo\",\n  \"gg\",\n  \"git\",\n  \"gitoid\",\n  \"gizmoproject\",\n  \"go\",\n  \"gopher\",\n  \"graph\",\n  \"gtalk\",\n  \"h323\",\n  \"ham\",\n  \"hcap\",\n  \"hcp\",\n  \"http\",\n  \"https\",\n  \"hxxp\",\n  \"hxxps\",\n  \"hydrazone\",\n  \"hyper\",\n  \"iax\",\n  \"icap\",\n  \"icon\",\n  \"im\",\n  \"imap\",\n  \"info\",\n  \"iotdisco\",\n  \"ipfs\",\n  \"ipn\",\n  \"ipns\",\n  \"ipp\",\n  \"ipps\",\n  \"irc\",\n  \"irc6\",\n  \"ircs\",\n  \"iris\",\n  \"iris.beep\",\n  \"iris.lwz\",\n  \"iris.xpc\",\n  \"iris.xpcs\",\n  \"isostore\",\n  \"itms\",\n  \"jabber\",\n  \"jar\",\n  \"jms\",\n  \"keyparc\",\n  \"lastfm\",\n  \"lbry\",\n  \"ldap\",\n  \"ldaps\",\n  \"leaptofrogans\",\n  \"lorawan\",\n  \"lpa\",\n  \"lvlt\",\n  \"magnet\",\n  \"mailto\",\n  \"maps\",\n  \"market\",\n  \"matrix\",\n  \"message\",\n  \"microsoft.windows.camera\",\n  \"microsoft.windows.camera.multipicker\",\n  \"microsoft.windows.camera.picker\",\n  \"mid\",\n  \"mms\",\n  \"mongodb\",\n  \"moz\",\n  \"moz-extension\",\n  \"ms-access\",\n  \"ms-appinstaller\",\n  \"ms-browser-extension\",\n  \"ms-calculator\",\n  \"ms-drive-to\",\n  \"ms-enrollment\",\n  \"ms-excel\",\n  \"ms-eyecontrolspeech\",\n  \"ms-gamebarservices\",\n  \"ms-gamingoverlay\",\n  \"ms-getoffice\",\n  \"ms-help\",\n  \"ms-infopath\",\n  \"ms-inputapp\",\n  \"ms-lockscreencomponent-config\",\n  \"ms-media-stream-id\",\n  \"ms-meetnow\",\n  \"ms-mixedrealitycapture\",\n  \"ms-mobileplans\",\n  \"ms-newsandinterests\",\n  \"ms-officeapp\",\n  \"ms-people\",\n  \"ms-powerpoint\",\n  \"ms-project\",\n  \"ms-publisher\",\n  \"ms-remotedesktop-launch\",\n  \"ms-restoretabcompanion\",\n  \"ms-screenclip\",\n  \"ms-screensketch\",\n  \"ms-search\",\n  \"ms-search-repair\",\n  \"ms-secondary-screen-controller\",\n  \"ms-secondary-screen-setup\",\n  \"ms-settings\",\n  \"ms-settings-airplanemode\",\n  \"ms-settings-bluetooth\",\n  \"ms-settings-camera\",\n  \"ms-settings-cellular\",\n  \"ms-settings-cloudstorage\",\n  \"ms-settings-connectabledevices\",\n  \"ms-settings-displays-topology\",\n  \"ms-settings-emailandaccounts\",\n  \"ms-settings-language\",\n  \"ms-settings-location\",\n  \"ms-settings-lock\",\n  \"ms-settings-nfctransactions\",\n  \"ms-settings-notifications\",\n  \"ms-settings-power\",\n  \"ms-settings-privacy\",\n  \"ms-settings-proximity\",\n  \"ms-settings-screenrotation\",\n  \"ms-settings-wifi\",\n  \"ms-settings-workplace\",\n  \"ms-spd\",\n  \"ms-stickers\",\n  \"ms-sttoverlay\",\n  \"ms-transit-to\",\n  \"ms-useractivityset\",\n  \"ms-virtualtouchpad\",\n  \"ms-visio\",\n  \"ms-walk-to\",\n  \"ms-whiteboard\",\n  \"ms-whiteboard-cmd\",\n  \"ms-word\",\n  \"msnim\",\n  \"msrp\",\n  \"msrps\",\n  \"mss\",\n  \"mt\",\n  \"mtqp\",\n  \"mumble\",\n  \"mupdate\",\n  \"mvn\",\n  \"news\",\n  \"nfs\",\n  \"ni\",\n  \"nih\",\n  \"nntp\",\n  \"notes\",\n  \"num\",\n  \"ocf\",\n  \"oid\",\n  \"onenote\",\n  \"onenote-cmd\",\n  \"opaquelocktoken\",\n  \"openpgp4fpr\",\n  \"otpauth\",\n  \"palm\",\n  \"paparazzi\",\n  \"payment\",\n  \"payto\",\n  \"pkcs11\",\n  \"platform\",\n  \"pop\",\n  \"pres\",\n  \"proxy\",\n  \"psyc\",\n  \"pttp\",\n  \"pwid\",\n  \"qb\",\n  \"query\",\n  \"quic-transport\",\n  \"redis\",\n  \"rediss\",\n  \"reload\",\n  \"res\",\n  \"resource\",\n  \"rmi\",\n  \"rsync\",\n  \"rtmfp\",\n  \"rtmp\",\n  \"rtsp\",\n  \"rtsps\",\n  \"rtspu\",\n  \"sarif\",\n  \"secondlife\",\n  \"secret-token\",\n  \"service\",\n  \"session\",\n  \"sftp\",\n  \"sgn\",\n  \"shc\",\n  \"sieve\",\n  \"simpleledger\",\n  \"simplex\",\n  \"sip\",\n  \"sips\",\n  \"skype\",\n  \"smb\",\n  \"smp\",\n  \"sms\",\n  \"smtp\",\n  \"snmp\",\n  \"soap.beep\",\n  \"soap.beeps\",\n  \"soldat\",\n  \"spiffe\",\n  \"spotify\",\n  \"ssb\",\n  \"ssh\",\n  \"starknet\",\n  \"steam\",\n  \"stun\",\n  \"stuns\",\n  \"submit\",\n  \"svn\",\n  \"swh\",\n  \"swid\",\n  \"swidpath\",\n  \"tag\",\n  \"taler\",\n  \"teamspeak\",\n  \"tel\",\n  \"teliaeid\",\n  \"telnet\",\n  \"tftp\",\n  \"things\",\n  \"thismessage\",\n  \"tip\",\n  \"tn3270\",\n  \"tool\",\n  \"turn\",\n  \"turns\",\n  \"tv\",\n  \"udp\",\n  \"unreal\",\n  \"urn\",\n  \"ut2004\",\n  \"uuid-in-package\",\n  \"v-event\",\n  \"vemmi\",\n  \"ventrilo\",\n  \"ves\",\n  \"view-source\",\n  \"vnc\",\n  \"vscode\",\n  \"vscode-insiders\",\n  \"vsls\",\n  \"w3\",\n  \"wcr\",\n  \"web3\",\n  \"webcal\",\n  \"wifi\",\n  \"ws\",\n  \"wss\",\n  \"wtai\",\n  \"wyciwyg\",\n  \"xcon\",\n  \"xcon-userid\",\n  \"xfire\",\n  \"xmlrpc.beep\",\n  \"xmlrpc.beeps\",\n  \"xmpp\",\n  \"xri\",\n  \"ymsgr\",\n  \"z39.50r\",\n  \"z39.50s\"\n]\n", "/**\n * uri-util.js\n */\n\n/* shared */\nimport { getType, isString } from './common.js';\nimport domPurify from './dompurify.js';\nimport textChars from '../lib/file/text-chars.json' assert { type: 'json' };\nimport uriSchemes from '../lib/iana/uri-schemes.json' assert { type: 'json' };\n\n/* constants */\nconst HEX = 16;\nconst REG_BASE64 = /^[\\da-z+/\\-_=]+$/i;\nconst REG_DATA_URL = /data:[^,]*,[^\"]+/g;\nconst REG_DATA_URL_BASE64 = /data:[^,]*;?base64,[\\da-z+/\\-_=]+/i;\nconst REG_HTML_SP = /[<>\"'\\s]/g;\nconst REG_HTML_SP_URL_ENC = /%(?:2(?:2|7)|3(?:C|E))/g;\nconst REG_HTML_SP_URL_ENC_SHORT = /%(?:2(?:2|7)|3(?:C|E))+?/;\nconst REG_MIME_DOM =\n  /^(?:text\\/(?:ht|x)ml|application\\/(?:xhtml\\+)?xml|image\\/svg\\+xml)/;\nconst REG_NUM_REF = /&#(x(?:00)?[\\dA-F]{2}|0?\\d{1,3});?/ig;\nconst REG_SCHEME = /^[a-z][\\da-z+\\-.]*$/;\nconst REG_SCHEME_CUSTOM = /^(?:ext|web)\\+[a-z]+$/;\nconst REG_SCRIPT = /(?:java|vb)script/;\nconst REG_URL_ENC = /^%[\\dA-F]{2}$/i;\nconst REG_URL_ENC_AMP = /%26/g;\n\n/**\n * get URL encoded string\n *\n * @param {string} str - string\n * @returns {string} - URL encoded string\n */\nexport const getURLEncodedString = str => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  const chars = [];\n  for (const ch of str) {\n    chars.push(`%${ch.charCodeAt(0).toString(HEX).toUpperCase()}`);\n  }\n  return chars.join('');\n};\n\n/**\n * escape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded (percent encoded) char\n * @returns {string} - escaped URL encoded HTML special char / URL encoded char\n */\nexport const escapeURLEncodedHTMLChars = ch => {\n  if (isString(ch) && REG_URL_ENC.test(ch)) {\n    ch = ch.toUpperCase();\n  }\n  const [amp, num, lt, gt, quot, apos] =\n    ['&', '#', '<', '>', '\"', \"'\"].map(getURLEncodedString);\n  let escapedChar;\n  if (ch === amp) {\n    escapedChar = `${amp}amp;`;\n  } else if (ch === lt) {\n    escapedChar = `${amp}lt;`;\n  } else if (ch === gt) {\n    escapedChar = `${amp}gt;`;\n  } else if (ch === quot) {\n    escapedChar = `${amp}quot;`;\n  } else if (ch === apos) {\n    escapedChar = `${amp}${num}39;`;\n  } else {\n    escapedChar = ch;\n  }\n  return escapedChar;\n};\n\n/**\n * unescape URL encoded HTML special chars\n *\n * @param {string} ch - URL encoded char\n * @returns {string} - unescaped HTML special char\n */\nexport const unescapeURLEncodedHTMLChars = ch => {\n  let unescapedChar;\n  if (/%26lt;?/.test(ch)) {\n    unescapedChar = '<';\n  } else if (/%26gt;?/.test(ch)) {\n    unescapedChar = '>';\n  } else if (/%26quot;?/.test(ch)) {\n    unescapedChar = '\"';\n  } else if (/%26%2339;?/.test(ch)) {\n    unescapedChar = \"'\";\n  } else {\n    unescapedChar = ch;\n  }\n  return unescapedChar;\n};\n\n/**\n * parse base64 encoded data\n *\n * @param {string} data - base64 encoded data\n * @returns {string} - parsed text data / base64 encoded data if binary\n */\nexport const parseBase64 = data => {\n  if (!isString(data)) {\n    throw new TypeError(`Expected String but got ${getType(data)}.`);\n  } else if (!REG_BASE64.test(data)) {\n    throw new Error(`Invalid base64 data: ${data}`);\n  }\n  const bin = atob(data);\n  const uint8arr = Uint8Array.from([...bin].map(c => c.charCodeAt(0)));\n  const textCharCodes = new Set(textChars);\n  let parsedData;\n  if (uint8arr.every(c => textCharCodes.has(c))) {\n    parsedData = bin.replace(/\\s/g, getURLEncodedString);\n  } else {\n    parsedData = data;\n  }\n  return parsedData;\n};\n\n/**\n * parse URL encoded numeric character references in the range 0x00 to 0xFF\n *\n * @param {string} str - string\n * @param {number} nest - nest level\n * @returns {string} - parsed string\n */\nexport const parseURLEncodedNumCharRef = (str, nest = 0) => {\n  if (!isString(str)) {\n    throw new TypeError(`Expected String but got ${getType(str)}.`);\n  }\n  if (!Number.isInteger(nest)) {\n    throw new TypeError(`Expected Number but got ${getType(nest)}.`);\n  } else if (nest > HEX) {\n    throw new Error('Character references nested too deeply.');\n  }\n  let res = decodeURIComponent(str);\n  if (/&#/.test(res)) {\n    const textCharCodes = new Set(textChars);\n    const items = [...res.matchAll(REG_NUM_REF)].reverse();\n    for (const item of items) {\n      const [numCharRef, value] = item;\n      let num;\n      if (/^x[\\dA-F]+/i.test(value)) {\n        num = parseInt(`0${value}`, HEX);\n      } else if (/^[\\d]+/.test(value)) {\n        num = parseInt(value);\n      }\n      if (Number.isInteger(num)) {\n        const { index } = item;\n        const [preNum, postNum] = [\n          res.substring(0, index),\n          res.substring(index + numCharRef.length)\n        ];\n        if (textCharCodes.has(num)) {\n          res = `${preNum}${String.fromCharCode(num)}${postNum}`;\n          if (/#x?$/.test(preNum) || /^#(?:x(?:00)?[2-7]|\\d)/.test(postNum)) {\n            res = parseURLEncodedNumCharRef(res, ++nest);\n          }\n        } else if (num < HEX * HEX) {\n          res = `${preNum}${postNum}`;\n        }\n      }\n    }\n  }\n  return res;\n};\n\n/**\n * URI schemes\n *\n */\nexport class URISchemes {\n  /* private fields */\n  #schemes;\n\n  /**\n   * construct\n   */\n  constructor() {\n    this.#schemes = new Set(uriSchemes);\n  }\n\n  /**\n   * get schemes\n   *\n   * @see {@link https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml}\n   *      - Historical schemes omitted\n   *      - 'moz-extension' scheme added\n   * @returns {Array.<string>} - array of schemes\n   */\n  get() {\n    return [...this.#schemes];\n  }\n\n  /**\n   * has scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  has(scheme) {\n    return this.#schemes.has(scheme);\n  }\n\n  /**\n   * add scheme\n   * NOTE: `javascript` and/or `vbscript` schemes can not be registered\n   *\n   * @param {string} scheme - scheme\n   * @returns {Array.<string>} - array of schemes\n   */\n  add(scheme) {\n    if (!isString(scheme)) {\n      throw new TypeError(`Expected String but got ${getType(scheme)}.`);\n    } else if (REG_SCRIPT.test(scheme) || !REG_SCHEME.test(scheme)) {\n      throw new Error(`Invalid scheme: ${scheme}`);\n    }\n    this.#schemes.add(scheme);\n    return [...this.#schemes];\n  }\n\n  /**\n   * remove scheme\n   *\n   * @param {string} scheme - scheme\n   * @returns {boolean} - result\n   */\n  remove(scheme) {\n    return this.#schemes.delete(scheme);\n  }\n\n  /**\n   * verify URI\n   *\n   * @param {string} uri - URI input\n   * @returns {boolean} - result\n   */\n  verify(uri) {\n    let res;\n    if (isString(uri)) {\n      try {\n        const { protocol } = new URL(uri);\n        const scheme = protocol.replace(/:$/, '');\n        const schemeParts = scheme.split('+');\n        res = (!REG_SCRIPT.test(scheme) && REG_SCHEME_CUSTOM.test(scheme)) ||\n              schemeParts.every(s => this.#schemes.has(s));\n      } catch (e) {\n        res = false;\n      }\n    }\n    return !!res;\n  }\n};\n\n/* URL sanitizer */\nexport class URLSanitizer extends URISchemes {\n  /* private fields */\n  #nest;\n  #recurse;\n\n  /**\n   * construct\n   */\n  constructor() {\n    super();\n    this.#nest = 0;\n    this.#recurse = new Set();\n  }\n\n  /**\n   * purify URL encoded DOM\n   *\n   * @param {string} dom - DOM input\n   * @returns {string} - purified DOM\n   */\n  purify(dom) {\n    if (!isString(dom)) {\n      throw new TypeError(`Expected String but got ${getType(dom)}.`);\n    }\n    let purifiedDom = domPurify.sanitize(decodeURIComponent(dom));\n    if (purifiedDom) {\n      const matchedDataUrls = purifiedDom.matchAll(REG_DATA_URL);\n      const items = [...matchedDataUrls].reverse();\n      for (const item of items) {\n        let [dataUrl] = item;\n        if (REG_DATA_URL_BASE64.test(dataUrl)) {\n          [dataUrl] = REG_DATA_URL_BASE64.exec(dataUrl);\n        }\n        this.#nest++;\n        this.#recurse.add(dataUrl);\n        const parsedDataUrl = this.sanitize(dataUrl, {\n          allow: ['data']\n        });\n        const { index } = item;\n        const [preDataUrl, postDataUrl] = [\n          purifiedDom.substring(0, index),\n          purifiedDom.substring(index + dataUrl.length)\n        ];\n        if (parsedDataUrl) {\n          purifiedDom = `${preDataUrl}${parsedDataUrl}${postDataUrl}`;\n        } else {\n          purifiedDom = `${preDataUrl}${postDataUrl}`;\n        }\n      }\n    }\n    return encodeURIComponent(purifiedDom);\n  };\n\n  /**\n   * sanitize URL\n   * NOTE: `data` and/or `file` schemes must be explicitly allowed\n   *       `javascript` and/or `vbscript` schemes can not be allowed\n   *\n   * @param {string} url - URL input\n   * @param {object} opt - options\n   * @param {Array.<string>} opt.allow - array of allowed schemes\n   * @param {Array.<string>} opt.deny - array of denied schemes\n   * @param {Array.<string>} opt.only - array of specific schemes to allow\n   * @param {boolean} opt.remove - remove tag and/or quote and the rest\n   * @returns {?string} - sanitized URL\n   */\n  sanitize(url, opt = { allow: [], deny: [], only: [] }) {\n    if (this.#nest > HEX) {\n      this.#nest = 0;\n      throw new Error('Data URLs nested too deeply.');\n    }\n    const { allow, deny, only, remove } = opt ?? {};\n    const schemeMap = new Map([\n      ['data', false],\n      ['file', false],\n      ['javascrpt', false],\n      ['vbscript', false]\n    ]);\n    let restrictScheme = false;\n    if (Array.isArray(only) && only.length) {\n      const schemes = super.get();\n      for (const item of schemes) {\n        schemeMap.set(item, false);\n      }\n      const items = Object.values(only);\n      for (let item of items) {\n        if (isString(item)) {\n          item = item.trim();\n          if (!REG_SCRIPT.test(item)) {\n            if (super.has(item)) {\n              schemeMap.set(item, true);\n            } else {\n              try {\n                super.add(item);\n              } catch (e) {\n                // fall through\n              }\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n              }\n            }\n            if (!restrictScheme && schemeMap.has(item)) {\n              restrictScheme = schemeMap.get(item);\n            }\n          }\n        }\n      }\n    } else {\n      if (Array.isArray(allow) && allow.length) {\n        const items = Object.values(allow);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (!REG_SCRIPT.test(item)) {\n              if (super.has(item)) {\n                schemeMap.set(item, true);\n              } else {\n                try {\n                  super.add(item);\n                } catch (e) {\n                  // fall through\n                }\n                if (super.has(item)) {\n                  schemeMap.set(item, true);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (Array.isArray(deny) && deny.length) {\n        const items = Object.values(deny);\n        for (let item of items) {\n          if (isString(item)) {\n            item = item.trim();\n            if (item) {\n              schemeMap.set(item, false);\n            }\n          }\n        }\n      }\n    }\n    let sanitizedUrl;\n    if (super.verify(url)) {\n      const { hash, href, pathname, protocol, search } = new URL(url);\n      const scheme = protocol.replace(/:$/, '');\n      const schemeParts = scheme.split('+');\n      let bool;\n      if (restrictScheme) {\n        bool = schemeParts.every(s => schemeMap.get(s));\n      } else {\n        for (const [key, value] of schemeMap.entries()) {\n          bool = value || (scheme !== key && schemeParts.every(s => s !== key));\n          if (!bool) {\n            break;\n          }\n        }\n      }\n      if (bool) {\n        let escapeHtml;\n        let urlToSanitize = href;\n        if (schemeParts.includes('data')) {\n          const [head, ...body] = pathname.split(',');\n          const data = `${body.join(',')}${search}${hash}`;\n          const mediaType = head.split(';');\n          const isBase64 = mediaType[mediaType.length - 1] === 'base64';\n          let parsedData = data;\n          if (isBase64) {\n            parsedData = parseBase64(data);\n          } else {\n            try {\n              const decodedData = parseURLEncodedNumCharRef(parsedData);\n              const { protocol: dataScheme } = new URL(decodedData.trim());\n              const dataSchemeParts = dataScheme.replace(/:$/, '').split('+');\n              if (dataSchemeParts.some(s => REG_SCRIPT.test(s))) {\n                urlToSanitize = '';\n              }\n            } catch (e) {\n              // fall through\n            }\n          }\n          const containsDataUrl = /data:[^,]*,/.test(parsedData);\n          if (parsedData !== data || containsDataUrl) {\n            if (containsDataUrl) {\n              const matchedDataUrls = parsedData.matchAll(REG_DATA_URL);\n              const items = [...matchedDataUrls].reverse();\n              for (const item of items) {\n                let [dataUrl] = item;\n                if (REG_DATA_URL_BASE64.test(dataUrl)) {\n                  [dataUrl] = REG_DATA_URL_BASE64.exec(dataUrl);\n                }\n                this.#nest++;\n                this.#recurse.add(dataUrl);\n                const parsedDataUrl = this.sanitize(dataUrl, {\n                  allow: ['data']\n                });\n                if (parsedDataUrl) {\n                  const { index } = item;\n                  const [preDataUrl, postDataUrl] = [\n                    parsedData.substring(0, index),\n                    parsedData.substring(index + dataUrl.length)\n                  ];\n                  parsedData = `${preDataUrl}${parsedDataUrl}${postDataUrl}`;\n                }\n              }\n              if (this.#recurse.has(url)) {\n                this.#recurse.delete(url);\n              } else {\n                escapeHtml = true;\n              }\n            } else if (this.#recurse.has(url)) {\n              this.#recurse.delete(url);\n            } else {\n              escapeHtml = true;\n            }\n          } else if (this.#recurse.has(url)) {\n            this.#recurse.delete(url);\n          } else {\n            escapeHtml = true;\n          }\n          if (REG_MIME_DOM.test(head)) {\n            parsedData =\n              this.purify(parsedData).replace(/%23$/, '').replace(/%3F$/, '');\n          }\n          if (urlToSanitize && parsedData) {\n            if (isBase64 && parsedData !== data) {\n              mediaType.pop();\n            }\n            urlToSanitize = `${scheme}:${mediaType.join(';')},${parsedData}`;\n          } else {\n            urlToSanitize = '';\n          }\n        } else {\n          escapeHtml = true;\n        }\n        if (!schemeParts.includes('data') && remove &&\n            REG_HTML_SP_URL_ENC_SHORT.test(urlToSanitize)) {\n          const item = REG_HTML_SP_URL_ENC_SHORT.exec(urlToSanitize);\n          const { index } = item;\n          urlToSanitize = urlToSanitize.substring(0, index);\n        }\n        if (urlToSanitize) {\n          sanitizedUrl = urlToSanitize\n            .replace(REG_HTML_SP, getURLEncodedString)\n            .replace(REG_URL_ENC_AMP, escapeURLEncodedHTMLChars);\n          if (escapeHtml) {\n            if (!schemeParts.includes('data')) {\n              sanitizedUrl = sanitizedUrl\n                .replace(REG_HTML_SP_URL_ENC, escapeURLEncodedHTMLChars);\n            }\n            this.#nest = 0;\n          }\n        } else {\n          sanitizedUrl = urlToSanitize;\n          this.#nest = 0;\n        }\n      }\n    }\n    return sanitizedUrl || null;\n  }\n\n  /**\n   * object with additional properties based on URL API\n   *\n   * @typedef {object} ParsedURL\n   * @property {string} input - URL input\n   * @property {boolean} valid - is valid URI\n   * @property {object} data - parsed result of data URL, `null`able\n   * @property {string} data.mime - MIME type\n   * @property {boolean} data.base64 - `true` if base64 encoded\n   * @property {string} data.data - data part of the data URL\n   * @property {string} href - sanitized URL input\n   * @property {string} origin - scheme, domain and port of the sanitized URL\n   * @property {string} protocol -  protocol scheme of the sanitized URL\n   * @property {string} username - username specified before the domain name\n   * @property {string} password - password specified before the domain name\n   * @property {string} host - domain and port of the sanitized URL\n   * @property {string} hostname - domain of the sanitized URL\n   * @property {string} port - port number of the sanitized URL\n   * @property {string} pathname - path of the sanitized URL\n   * @property {string} search - query string of the sanitized URL\n   * @property {object} searchParams - URLSearchParams object\n   * @property {string} hash - fragment identifier of the sanitized URL\n   */\n\n  /**\n   * parse sanitized URL\n   *\n   * @param {string} url - URL input\n   * @param {object} opt - options\n   * @returns {ParsedURL} - result with enhanced props based on URL API\n   */\n  parse(url, opt) {\n    if (!isString(url)) {\n      throw new TypeError(`Expected String but got ${getType(url)}.`);\n    }\n    const sanitizedUrl = this.sanitize(url, opt ?? {\n      allow: ['data', 'file']\n    });\n    const parsedUrl = new Map([\n      ['input', url]\n    ]);\n    if (sanitizedUrl) {\n      const urlObj = new URL(sanitizedUrl);\n      const { pathname, protocol } = urlObj;\n      const schemeParts = protocol.replace(/:$/, '').split('+');\n      parsedUrl.set('valid', true);\n      if (schemeParts.includes('data')) {\n        const dataUrl = new Map();\n        const [head, ...body] = pathname.split(',');\n        const data = `${body.join(',')}`;\n        const mediaType = head.split(';');\n        const isBase64 = mediaType[mediaType.length - 1] === 'base64';\n        if (isBase64) {\n          mediaType.pop();\n        }\n        dataUrl.set('mime', mediaType.join(';'));\n        dataUrl.set('base64', isBase64);\n        dataUrl.set('data', data);\n        parsedUrl.set('data', Object.fromEntries(dataUrl));\n      } else {\n        parsedUrl.set('data', null);\n      }\n      for (const key in urlObj) {\n        const value = urlObj[key];\n        if (isString(value)) {\n          parsedUrl.set(key, value);\n        }\n      }\n    } else {\n      parsedUrl.set('valid', false);\n    }\n    return Object.fromEntries(parsedUrl);\n  }\n};\n\n/* instance */\nconst urlSanitizer = new URLSanitizer();\n\n/* aliases and async wrappers */\n/**\n * is URI sync\n *\n * @param {string} uri - URI input\n * @returns {boolean} - result\n */\nexport const isURISync = uri => urlSanitizer.verify(uri);\n\n/**\n * is URI async\n *\n * @param {string} uri - URI input\n * @returns {Promise.<boolean>} - result\n */\nexport const isURI = async uri => {\n  const res = await isURISync(uri);\n  return res;\n};\n\n/**\n * parse URL sync\n *\n * @param {string} url - URL input\n * @returns {ParsedURL} - result with extended props based on URL API\n */\nexport const parseURLSync = url => urlSanitizer.parse(url);\n\n/**\n * parse URL async\n *\n * @param {string} url - URL input\n * @returns {Promise.<ParsedURL>} - result with extended props based on URL API\n */\nexport const parseURL = async url => {\n  const res = await parseURLSync(url);\n  return res;\n};\n\n/**\n * sanitize URL sync\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {?string} - sanitized URL\n */\nexport const sanitizeURLSync = (url, opt) => {\n  const parsedUrl = urlSanitizer.parse(url, opt ?? {\n    allow: [],\n    deny: [],\n    only: []\n  });\n  let res;\n  if (parsedUrl) {\n    const { href } = parsedUrl;\n    res = href;\n  }\n  return res ?? null;\n};\n\n/**\n * sanitize URL async\n *\n * @param {string} url - URL input\n * @param {object} opt - options\n * @returns {Promise.<?string>} - sanitized URL\n */\nexport const sanitizeURL = async (url, opt) => {\n  const res = await sanitizeURLSync(url, opt);\n  return res;\n};\n\n/* export instance */\nexport {\n  urlSanitizer as default\n};\n"],
  "mappings": "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CA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,KArHyB,CAAD,EAyHboE,GAAMpE,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,OA3CwB,CAAD,EA8CZqE,GAAarE,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,cAxB+B,CAAD,EA+BnBsE,GAAgBtE,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,KAvBkC,CAAD,EA0BtBuE,GAASvE,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,YA7B2B,CAAD,EAkCfwE,GAAmBxE,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,MAfqC,CAAD,EAkBzByE,GAAOzE,EAAO,CAAC,OAAD,CAAD,ECpRbmE,GAAOnE,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,MA7GyB,CAAD,EAgHboE,GAAMpE,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,YAtLwB,CAAD,EAyLZuE,GAASvE,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,OArD2B,CAAD,EAwDf0E,GAAM1E,EAAO,CACxB,aACA,SACA,cACA,YACA,aALwB,CAAD,EChWZ2E,GAAgB1E,EAAK,2BAAD,EACpB2E,GAAW3E,EAAK,uBAAD,EACf4E,GAAc5E,EAAK,eAAD,EAClB6E,GAAY7E,EAAK,4BAAD,EAChB8E,GAAY9E,EAAK,gBAAD,EAChB+E,GAAiB/E,EAC5B,uFADgC,EAGrBgF,GAAoBhF,EAAK,uBAAD,EACxBiF,GAAkBjF,EAC7B,6DADiC,EAGtBkF,GAAelF,EAAK,SAAD,ECM1BmF,GAAY,UAAA,CAAA,OAAO,OAAOC,OAAW,IAAc,KAAOA,MAA9C,EAUZC,GAA4B,SAAUC,EAAcC,EAAU,CAEhE,GAAAC,EAAOF,CAAP,IAAwB,UACxB,OAAOA,EAAaG,cAAiB,WAErC,OAAO,KAMLC,IAAAA,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ChC,OAAOJ,GAAkBC,EAAOC,EAAQzM,CAAhB,CACzB,EASDsC,EAAUoM,QAAU,SAAU7C,EAAY8C,EAAc,CAClD,OAAOA,GAAiB,aAI5BjK,EAAMmH,CAAD,EAAenH,EAAMmH,CAAD,GAAgB,CAAA,EACzCxO,EAAUqH,EAAMmH,CAAD,EAAc8C,CAApB,EACV,EAUDrM,EAAUsM,WAAa,SAAU/C,EAAY,CAC3C,GAAInH,EAAMmH,CAAD,EACP,OAAO1O,EAASuH,EAAMmH,CAAD,CAAN,CAElB,EAQDvJ,EAAUuM,YAAc,SAAUhD,EAAY,CACxCnH,EAAMmH,CAAD,IACPnH,EAAMmH,CAAD,EAAe,CAAA,EAEvB,EAODvJ,EAAUwM,eAAiB,UAAY,CACrCpK,EAAQ,CAAA,CACT,EAEMpC,CACR,CAED,IAAAyM,GAAe1M,GAAe,gBChmDvB,IAAM2M,EAAUC,GACrB,OAAO,UAAU,SAAS,KAAKA,CAAC,EAAE,MAAM,EAAW,EAAO,EAQ/CC,EAAWD,GAAK,OAAOA,GAAM,UAAYA,aAAa,OCnBnE,IAAAE,GAAwB,WCJxxOA,IAAAC,GAAA,CACE,MACA,OACA,QACA,OACA,OACA,MACA,MACA,YACA,MACA,MACA,MACA,MACA,OACA,UACA,UACA,MACA,KACA,MACA,aACA,KACA,SACA,UACA,UACA,cACA,OACA,OACA,aACA,QACA,aACA,SACA,MACA,OACA,QACA,SACA,mBACA,MACA,OACA,QACA,0BACA,UACA,eACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,WACA,OACA,MACA,MACA,qBACA,kBACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,WACA,MACA,WACA,UACA,WACA,OACA,YACA,OACA,OACA,SACA,2BACA,OACA,KACA,MACA,cACA,MACA,KACA,MACA,SACA,eACA,KACA,SACA,QACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,QACA,YACA,QACA,MACA,OACA,OACA,KACA,OACA,OACA,WACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,YACA,WACA,WACA,YACA,WACA,OACA,SACA,MACA,MACA,UACA,SACA,OACA,OACA,QACA,gBACA,UACA,MACA,OACA,SACA,SACA,OACA,SACA,SACA,UACA,2BACA,uCACA,kCACA,MACA,MACA,UACA,MACA,gBACA,YACA,kBACA,uBACA,gBACA,cACA,gBACA,WACA,sBACA,qBACA,mBACA,eACA,UACA,cACA,cACA,gCACA,qBACA,aACA,yBACA,iBACA,sBACA,eACA,YACA,gBACA,aACA,eACA,0BACA,yBACA,gBACA,kBACA,YACA,mBACA,iCACA,4BACA,cACA,2BACA,wBACA,qBACA,uBACA,2BACA,iCACA,gCACA,+BACA,uBACA,uBACA,mBACA,8BACA,4BACA,oBACA,sBACA,wBACA,6BACA,mBACA,wBACA,SACA,cACA,gBACA,gBACA,qBACA,qBACA,WACA,aACA,gBACA,oBACA,UACA,QACA,OACA,QACA,MACA,KACA,OACA,SACA,UACA,MACA,OACA,MACA,KACA,MACA,OACA,QACA,MACA,MACA,MACA,UACA,cACA,kBACA,cACA,UACA,OACA,YACA,UACA,QACA,SACA,WACA,MACA,OACA,QACA,OACA,OACA,OACA,KACA,QACA,iBACA,QACA,SACA,SACA,MACA,WACA,MACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,aACA,eACA,UACA,UACA,OACA,MACA,MACA,QACA,eACA,UACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,YACA,aACA,SACA,SACA,UACA,MACA,MACA,WACA,QACA,OACA,QACA,SACA,MACA,MACA,OACA,WACA,MACA,QACA,YACA,MACA,WACA,SACA,OACA,SACA,cACA,MACA,SACA,OACA,OACA,QACA,KACA,MACA,SACA,MACA,SACA,kBACA,UACA,QACA,WACA,MACA,cACA,MACA,SACA,kBACA,OACA,KACA,MACA,OACA,SACA,OACA,KACA,MACA,OACA,UACA,OACA,cACA,QACA,cACA,eACA,OACA,MACA,QACA,UAC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",
  "names": ["hasOwnProperty", "Object", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "freeze", "seal", "create", "_ref", "Reflect", "apply", "construct", "fun", "thisValue", "args", "x", "Func", "_toConsumableArray", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "_len", "_key", "_len2", "_key2", "addToSet", "set", "array", "transformCaseFunc", "l", "length", "element", "lcElement", "clone", "object", "newObject", "property", "lookupGetter", "prop", "desc", "get", "value", "fallbackValue", "console", "warn", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "document", "_typeof", "createPolicy", "suffix", "ATTR_NAME", "currentScript", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "nodeType", "isSupported", "originalDocument", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "_window$NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "_document", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "documentMode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "outerHTML", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_basicCustomElementTest", "childCount", "i", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "attr", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "_attr", "forceKeepAttr", "undefined", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "oldNode", "returnNode", "toStaticHTML", "appendChild", "firstChild", "nodeIterator", "shadowroot", "serializedHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks", "purify", "getType", "o", "isString", "import_dompurify", "text_chars_default", "uri_schemes_default", "HEX", "REG_BASE64", "REG_DATA_URL", "REG_DATA_URL_BASE64", "REG_HTML_SP", "REG_HTML_SP_URL_ENC", "REG_HTML_SP_URL_ENC_SHORT", "REG_MIME_DOM", "REG_NUM_REF", "REG_SCHEME", "REG_SCHEME_CUSTOM", "REG_SCRIPT", "REG_URL_ENC", "REG_URL_ENC_AMP", "getURLEncodedString", "str", "isString", "getType", "chars", "ch", "escapeURLEncodedHTMLChars", "amp", "num", "lt", "gt", "quot", "apos", "escapedChar", "parseBase64", "data", "isString", "REG_BASE64", "getType", "bin", "uint8arr", "c", "textCharCodes", "text_chars_default", "parsedData", "getURLEncodedString", "parseURLEncodedNumCharRef", "str", "nest", "HEX", "res", "items", "REG_NUM_REF", "item", "numCharRef", "value", "num", "index", "preNum", "postNum", "URISchemes", "#schemes", "uri_schemes_default", "scheme", "REG_SCRIPT", "REG_SCHEME", "uri", "protocol", "schemeParts", "REG_SCHEME_CUSTOM", "s", "URLSanitizer", "#nest", "#recurse", "dom", "purifiedDom", "REG_DATA_URL", "dataUrl", "REG_DATA_URL_BASE64", "parsedDataUrl", "preDataUrl", "postDataUrl", "url", "opt", "allow", "deny", "only", "remove", "schemeMap", "restrictScheme", "schemes", "sanitizedUrl", "hash", "href", "pathname", "search", "bool", "key", "escapeHtml", "urlToSanitize", "head", "body", "mediaType", "isBase64", "decodedData", "dataScheme", "containsDataUrl", "REG_MIME_DOM", "REG_HTML_SP_URL_ENC_SHORT", "REG_HTML_SP", "REG_URL_ENC_AMP", "escapeURLEncodedHTMLChars", "REG_HTML_SP_URL_ENC", "parsedUrl", "urlObj", "urlSanitizer", "isURISync", "isURI", "parseURLSync", "parseURL", "sanitizeURLSync", "sanitizeURL"]
}
